%!PS-Adobe-2.0 EPSF-1.2%%Creator: Vectorworks 2015 SP2 [20.0.2(240846)] (64-Bit app)%%Title: control_panel_tb_004.eps%%CreationDate: 10/12/2020%%DocumentProcSets: Adobe_packedarray 1.0 0%%DocumentSuppliedProcSets: Adobe_packedarray 1.0 0%%DocumentProcSets: Adobe_cmykcolor 1.1 0%%DocumentSuppliedProcSets: Adobe_cmykcolor 1.1 0%%DocumentProcSets: Adobe_cshow 1.1 0%%DocumentSuppliedProcSets: Adobe_cshow 1.1 0%%DocumentProcSets: Adobe_customcolor 1.0 0%%DocumentSuppliedProcSets: Adobe_customcolor 1.0 0%%DocumentProcSets: Adobe_pattern 1.9 0%%DocumentSuppliedProcSets: Adobe_pattern 1.9 0%%DocumentProcSets: Adobe_Illustrator88 1.19 0%%DocumentSuppliedProcSets: Adobe_Illustrator88 1.19 0%%BoundingBox:0 0 340 340%%TemplateBox:306 396 306 396%%DocumentPreview: Header%%EndComments%%BeginProlog%%BeginProcSet: Adobe_packedarray 1.0 0userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndProcSetAdobe_packedarray /initialize get exec%%BeginProcSet: Adobe_cmykcolor 1.1 0currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end end	Adobe_cmykcolor begin	} ifelse} def/terminate{currentdict Adobe_cmykcolor eq	{ end	} if} def/setcmykcolor{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_cshow 1.1 0currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_customcolor 1.0 0currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_pattern 1.9 0currentpacking true setpackinguserdict /Adobe_pattern 14 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern begin	Adobe_pattern		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			break			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll pop pop pop pop pop pop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	pop pop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{pop pop}			{pop pop pop true}			{pop pop pop pop pop pop pop true}			{pop true}			pathforall			} stopped			{			pop pop pop pop pop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		pop pop		}		{		pop pop pop pop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern /patternmatrix get	} ifgsavepatternclipAdobe_pattern /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern /patternfill get exec			} pathforall		pop pop	pop		} stopped			{			pop pop pop pop pop			patternclip			Adobe_pattern /patternfill get exec			} if	}	{	patternclip	Adobe_pattern /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern /patternmatrix get 4 1 roll	} if	{	pop pop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	6 index 6 index 6 index	Adobe_pattern /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshowpop pop pop pop pop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	pop pop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshowpop pop pop pop pop pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_Illustrator88 1.19 0currentpacking true setpackinguserdict /Adobe_Illustrator88 73 dict dup begin put/initialize{userdict /Adobe_Illustrator88_vars 31 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_a null def/_as null def/_tt 2 array def/_tl 2 array def/_tm matrix def/t {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator88 beginAdobe_Illustrator88 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator88 beginAdobe_Illustrator88_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator88_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/ss{3 -1 roll pop4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/sp{exch pop	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where{pop true setstrokeadjust/c{curveto} def/C/c load def/v{currentpoint 6 2 roll curveto} def/V/v load def/y{2 copy curveto} def/Y/y load def/l{lineto} def/L/l load def/m{moveto} def}{/c{pl curveto} def/C/c load def/v{currentpoint 6 2 roll pl curveto} def/V/v load def/y{pl 2 copy curveto} def/Y/y load def/l{pl lineto} def/L/l load def/m{pl moveto} def} ifelse/d{setdash} def/cfcurrentflat def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{newpath} def/n/N load def/F{_pf} def/f{closepathF} def/S{_ps} def/s{closepathS} def/B{gsave F grestoreS} def/b{closepathB} def/W{clip} def/ta{_as moveto_tt aload pop 4 -2 roll} def/tl{_tl aload pop translate} def/as{{0 0}{2 copy _tt aload pop 4 -2 roll swexch neg 2 div exch neg 2 div}{2 copy _tt aload pop 4 -2 roll swexch neg exch neg}{0 0}} cvlit def/z{/_a exch ddef/_as as _a get ddef_a 2 le	{	0 _tt astore pop	0 exch neg _tl astore pop	}	{	0 exch neg _tt astore pop	neg 0 _tl astore pop	} ifelseexch findfont exch scalefont setfont} def/tm{_tm currentmatrix popconcat} def/I{tm/t	{	ta sp	tl	} ddef} def/o{tm/t	{	ta 4 npop	tl	newpath	} ddef} def/e{tm/t	{	ta _psf	tl	newpath	} ddef} def/r{tm/t	{	ta _tm _pss	tl	newpath	} ddef} def/a{tm/t	{	2 copy	ta _psf	newpath	ta _tm _pss	tl	newpath	} ddef} def/T{_tm setmatrix} def/Z{popfindfont begincurrentdict dup length 1 add dict begin	{	1 index /FID ne		{		def		}		{		2 npop		} ifelse	} forall/FontName exch def dup length 0 ne	{	/Encoding Encoding 256 array copy def	0 exch		{		dup type /nametype eq			{			Encoding 2 index 2 index put pop			1 add			}			{			exch pop			} ifelse		} forall	} if popcurrentdict dup end end/FontName get exch definefont pop} def/u{} def/U{} def/q{gsave} def/Q{grestore} def/`{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			10 copy 6 npop exch pop patternashow			}			{			pop			7 copy 3 npop exch pop ashow			} ifelse		grestore		pop		} for	pop	} forrestore4 npop newpath} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			11 copy 6 npop 3 -1 roll pop patternashowstroke			}			{			pop			8 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestore5 npop newpath} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking%%EndProcSet%%EndProlog%%BeginSetupAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_pattern /initialize get execAdobe_Illustrator88 /initialize get exec%%EndSetup0 A0 O0 R0 g0 G0 i 0 J 0 j 1 w 4 M [] 0 d45.059 23.471  m295.647 23.471  L298.481 23.471 301.282 24.031 303.882 25.118 c306.522 26.205 308.903 27.785 310.882 29.765 c312.901 31.783 314.501 34.164 315.588 36.765 c316.675 39.404 317.235 42.225 317.235 45.059 c317.235 45.059  L317.235 295.588  L317.235 298.422 316.675 301.243 315.588 303.882 c314.501 306.483 312.901 308.864 310.882 310.882 c308.903 312.901 306.522 314.501 303.882 315.588 c301.282 316.675 298.481 317.235 295.647 317.235 c295.647 317.235  L45.059 317.235  L42.225 317.235 39.424 316.675 36.824 315.588 c34.184 314.501 31.783 312.901 29.765 310.882 c27.783 308.862 26.206 306.485 25.118 303.882 c24.031 301.243 23.471 298.422 23.471 295.588 c23.471 295.588  L23.471 45.059  L23.471 42.225 24.031 39.404 25.118 36.765 c26.205 34.164 27.785 31.783 29.765 29.765 c31.783 27.785 34.184 26.205 36.824 25.118 c39.424 24.031 42.225 23.471 45.059 23.471 c45.059 23.471  L[] 0 d 1 j 1 J0.118 w 0 G S285.706 48.471  m285.706 49.325 285.886 50.165 286.235 50.941 c286.546 51.718 287.025 52.437 287.647 53.059 c288.229 53.641 288.93 54.121 289.706 54.471 c290.521 54.781 291.361 54.941 292.176 54.941 c293.031 54.941 293.89 54.781 294.706 54.471 c295.482 54.121 296.182 53.641 296.765 53.059 c297.386 52.438 297.866 51.718 298.176 50.941 c298.526 50.165 298.706 49.325 298.706 48.471 c298.706 48.471  L298.706 47.617 298.526 46.776 298.176 46 c297.866 45.224 297.386 44.503 296.765 43.882 c296.182 43.3 295.482 42.82 294.706 42.471 c293.891 42.16 293.03 42 292.176 42 c291.361 42 290.522 42.16 289.706 42.471 c288.93 42.82 288.229 43.3 287.647 43.882 c287.026 44.503 286.546 45.224 286.235 46 c285.886 46.776 285.706 47.617 285.706 48.471 c285.706 48.471  L[] 0 d 1 j 1 J0.118 w 0 G S42 292.176  m42 293.03 42.16 293.871 42.471 294.647 c42.82 295.463 43.3 296.182 43.882 296.765 c44.504 297.386 45.223 297.866 46 298.176 c46.776 298.487 47.617 298.647 48.471 298.647 c49.325 298.647 50.165 298.487 50.941 298.176 c51.757 297.866 52.476 297.386 53.059 296.765 c53.68 296.182 54.16 295.463 54.471 294.647 c54.781 293.871 54.941 293.03 54.941 292.176 c54.941 292.176  L54.941 291.322 54.781 290.482 54.471 289.706 c54.16 288.929 53.68 288.21 53.059 287.588 c52.476 287.005 51.757 286.526 50.941 286.176 c50.165 285.866 49.325 285.706 48.471 285.706 c47.617 285.706 46.776 285.866 46 286.176 c45.223 286.526 44.504 287.005 43.882 287.588 c43.3 288.21 42.82 288.929 42.471 289.706 c42.16 290.482 42 291.322 42 292.176 c42 292.176  L[] 0 d 1 j 1 J0.118 w 0 G S115.294 257.235  m115.294 257.779 115.394 258.319 115.588 258.824 c115.821 259.328 116.141 259.788 116.529 260.176 c116.879 260.565 117.318 260.865 117.824 261.059 c118.328 261.292 118.868 261.412 119.412 261.412 c119.956 261.412 120.495 261.292 121 261.059 c121.505 260.865 121.964 260.565 122.353 260.176 c122.741 259.788 123.041 259.329 123.235 258.824 c123.468 258.318 123.588 257.779 123.588 257.235 c123.588 257.235  L123.588 256.692 123.468 256.152 123.235 255.647 c123.041 255.142 122.741 254.683 122.353 254.294 c121.965 253.906 121.505 253.606 121 253.412 c120.495 253.218 119.956 253.118 119.412 253.118 c118.868 253.118 118.328 253.218 117.824 253.412 c117.319 253.606 116.879 253.906 116.529 254.294 c116.141 254.683 115.821 255.142 115.588 255.647 c115.394 256.152 115.294 256.691 115.294 257.235 c115.294 257.235  L[] 0 d 1 j 1 J0.118 w 0 G S131.118 206.353  m131.118 206.936 131.237 207.535 131.471 208.118 c131.704 208.7 132.043 209.22 132.471 209.647 c132.898 210.074 133.418 210.414 134 210.647 c134.582 210.88 135.182 211 135.765 211 c136.386 211 137.005 210.88 137.588 210.647 c138.171 210.414 138.69 210.074 139.118 209.647 c139.545 209.22 139.885 208.7 140.118 208.118 c140.351 207.535 140.471 206.935 140.471 206.353 c140.471 206.353  L140.471 205.731 140.351 205.112 140.118 204.529 c139.885 203.986 139.545 203.466 139.118 203 c138.691 202.573 138.171 202.233 137.588 202 c137.006 201.767 136.386 201.647 135.765 201.647 c135.182 201.647 134.583 201.767 134 202 c133.417 202.233 132.898 202.573 132.471 203 c132.044 203.466 131.703 203.986 131.471 204.529 c131.238 205.112 131.118 205.732 131.118 206.353 c131.118 206.353  L[] 0 d 1 j 1 J0.118 w 0 G S135.706 223.588  m135.706 224.209 135.846 224.829 136.118 225.412 c136.351 225.956 136.69 226.475 137.118 226.941 c137.545 227.369 138.064 227.708 138.647 227.941 c139.191 228.174 139.791 228.294 140.412 228.294 c141.033 228.294 141.653 228.174 142.235 227.941 c142.779 227.708 143.299 227.368 143.765 226.941 c144.192 226.475 144.532 225.956 144.765 225.412 c144.998 224.829 145.118 224.209 145.118 223.588 c145.118 223.588  L145.118 222.967 144.998 222.367 144.765 221.824 c144.532 221.241 144.192 220.721 143.765 220.294 c143.299 219.867 142.779 219.527 142.235 219.294 c141.653 219.061 141.033 218.941 140.412 218.941 c139.791 218.941 139.191 219.061 138.647 219.294 c138.065 219.527 137.545 219.867 137.118 220.294 c136.69 220.721 136.351 221.241 136.118 221.824 c135.846 222.367 135.706 222.967 135.706 223.588 c135.706 223.588  L[] 0 d 1 j 1 J0.118 w 0 G S115.294 155.412  m115.294 155.955 115.394 156.495 115.588 157 c115.821 157.505 116.141 157.964 116.529 158.353 c116.879 158.741 117.318 159.041 117.824 159.235 c118.328 159.468 118.868 159.588 119.412 159.588 c119.956 159.588 120.495 159.468 121 159.235 c121.505 159.041 121.965 158.741 122.353 158.353 c122.741 157.964 123.041 157.505 123.235 157 c123.468 156.495 123.588 155.955 123.588 155.412 c123.588 155.412  L123.588 154.868 123.468 154.328 123.235 153.824 c123.041 153.318 122.741 152.859 122.353 152.471 c121.964 152.082 121.505 151.782 121 151.588 c120.495 151.394 119.955 151.294 119.412 151.294 c118.868 151.294 118.328 151.394 117.824 151.588 c117.319 151.782 116.879 152.082 116.529 152.471 c116.141 152.859 115.821 153.319 115.588 153.824 c115.394 154.329 115.294 154.868 115.294 155.412 c115.294 155.412  L[] 0 d 1 j 1 J0.118 w 0 G S135.706 189.059  m135.706 189.68 135.846 190.28 136.118 190.824 c136.351 191.406 136.691 191.926 137.118 192.353 c137.545 192.819 138.064 193.179 138.647 193.412 c139.191 193.645 139.791 193.765 140.412 193.765 c141.033 193.765 141.653 193.645 142.235 193.412 c142.779 193.179 143.299 192.819 143.765 192.353 c144.192 191.926 144.532 191.406 144.765 190.824 c144.998 190.28 145.118 189.68 145.118 189.059 c145.118 189.059  L145.118 188.437 144.998 187.818 144.765 187.235 c144.532 186.692 144.192 186.192 143.765 185.765 c143.299 185.299 142.779 184.939 142.235 184.706 c141.653 184.473 141.033 184.353 140.412 184.353 c139.791 184.353 139.191 184.473 138.647 184.706 c138.065 184.939 137.545 185.299 137.118 185.765 c136.691 186.192 136.351 186.692 136.118 187.235 c135.846 187.818 135.706 188.438 135.706 189.059 c135.706 189.059  L[] 0 d 1 j 1 J0.118 w 0 G S148.353 236.235  m148.353 236.856 148.493 237.477 148.765 238.059 c148.998 238.603 149.337 239.122 149.765 239.588 c150.192 240.016 150.711 240.355 151.294 240.588 c151.838 240.821 152.437 240.941 153.059 240.941 c153.68 240.941 154.3 240.821 154.882 240.588 c155.426 240.355 155.926 240.015 156.353 239.588 c156.819 239.122 157.179 238.602 157.412 238.059 c157.645 237.476 157.765 236.857 157.765 236.235 c157.765 236.235  L157.765 235.614 157.645 235.015 157.412 234.471 c157.179 233.888 156.819 233.368 156.353 232.941 c155.926 232.514 155.426 232.174 154.882 231.941 c154.3 231.708 153.68 231.588 153.059 231.588 c152.438 231.588 151.838 231.708 151.294 231.941 c150.711 232.174 150.192 232.514 149.765 232.941 c149.338 233.368 148.998 233.888 148.765 234.471 c148.493 235.015 148.353 235.614 148.353 236.235 c148.353 236.235  L[] 0 d 1 j 1 J0.118 w 0 G S148.353 206.353  m148.353 206.935 148.493 207.535 148.765 208.118 c148.998 208.7 149.337 209.22 149.765 209.647 c150.192 210.074 150.711 210.414 151.294 210.647 c151.838 210.88 152.438 211 153.059 211 c153.68 211 154.3 210.88 154.882 210.647 c155.426 210.414 155.926 210.074 156.353 209.647 c156.819 209.22 157.179 208.7 157.412 208.118 c157.645 207.535 157.765 206.935 157.765 206.353 c157.765 206.353  L157.765 205.732 157.645 205.112 157.412 204.529 c157.179 203.986 156.819 203.466 156.353 203 c155.926 202.573 155.426 202.233 154.882 202 c154.3 201.767 153.68 201.647 153.059 201.647 c152.438 201.647 151.838 201.767 151.294 202 c150.711 202.233 150.192 202.573 149.765 203 c149.338 203.466 148.998 203.986 148.765 204.529 c148.493 205.112 148.353 205.732 148.353 206.353 c148.353 206.353  L[] 0 d 1 j 1 J0.118 w 0 G S157 221.294  m157 221.915 157.12 222.515 157.353 223.059 c157.586 223.641 157.946 224.161 158.412 224.588 c158.839 225.054 159.358 225.414 159.941 225.647 c160.485 225.88 161.084 226 161.706 226 c162.327 226 162.927 225.88 163.471 225.647 c164.053 225.414 164.573 225.054 165 224.588 c165.466 224.161 165.826 223.642 166.059 223.059 c166.292 222.515 166.412 221.916 166.412 221.294 c166.412 221.294  L166.412 220.672 166.292 220.053 166.059 219.471 c165.826 218.927 165.466 218.427 165 218 c164.573 217.534 164.053 217.174 163.471 216.941 c162.927 216.708 162.327 216.588 161.706 216.588 c161.085 216.588 160.485 216.708 159.941 216.941 c159.358 217.174 158.839 217.534 158.412 218 c157.946 218.427 157.586 218.927 157.353 219.471 c157.12 220.053 157 220.672 157 221.294 c157 221.294  L[] 0 d 1 j 1 J0.118 w 0 G S148.353 176.412  m148.353 177.033 148.493 177.633 148.765 178.176 c148.998 178.759 149.337 179.279 149.765 179.706 c150.192 180.172 150.712 180.532 151.294 180.765 c151.838 180.998 152.438 181.118 153.059 181.118 c153.68 181.118 154.3 180.998 154.882 180.765 c155.426 180.532 155.926 180.172 156.353 179.706 c156.819 179.279 157.179 178.759 157.412 178.176 c157.645 177.633 157.765 177.033 157.765 176.412 c157.765 176.412  L157.765 175.791 157.645 175.171 157.412 174.588 c157.179 174.045 156.819 173.545 156.353 173.118 c155.926 172.652 155.426 172.292 154.882 172.059 c154.3 171.826 153.68 171.706 153.059 171.706 c152.438 171.706 151.838 171.826 151.294 172.059 c150.711 172.292 150.192 172.651 149.765 173.118 c149.338 173.545 148.998 174.045 148.765 174.588 c148.493 175.171 148.353 175.79 148.353 176.412 c148.353 176.412  L[] 0 d 1 j 1 J0.118 w 0 G S157 191.353  m157 191.974 157.12 192.594 157.353 193.176 c157.586 193.72 157.946 194.24 158.412 194.706 c158.839 195.133 159.358 195.473 159.941 195.706 c160.485 195.939 161.085 196.059 161.706 196.059 c162.327 196.059 162.927 195.939 163.471 195.706 c164.053 195.473 164.573 195.133 165 194.706 c165.466 194.24 165.826 193.72 166.059 193.176 c166.292 192.594 166.412 191.975 166.412 191.353 c166.412 191.353  L166.412 190.732 166.292 190.132 166.059 189.588 c165.826 189.005 165.466 188.486 165 188.059 c164.573 187.631 164.053 187.292 163.471 187.059 c162.927 186.826 162.327 186.706 161.706 186.706 c161.085 186.706 160.485 186.826 159.941 187.059 c159.358 187.292 158.839 187.631 158.412 188.059 c157.946 188.486 157.586 189.006 157.353 189.588 c157.12 190.132 157 190.732 157 191.353 c157 191.353  L[] 0 d 1 j 1 J0.118 w 0 G S165.647 240.882  m165.647 241.503 165.767 242.124 166 242.706 c166.233 243.249 166.573 243.749 167 244.176 c167.466 244.643 167.985 245.002 168.529 245.235 c169.112 245.468 169.732 245.588 170.353 245.588 c170.975 245.588 171.574 245.468 172.118 245.235 c172.7 245.002 173.22 244.643 173.647 244.176 c174.074 243.749 174.414 243.25 174.647 242.706 c174.919 242.123 175.059 241.504 175.059 240.882 c175.059 240.882  L175.059 240.261 174.919 239.662 174.647 239.118 c174.414 238.535 174.074 238.015 173.647 237.588 c173.22 237.122 172.7 236.762 172.118 236.529 c171.574 236.297 170.974 236.176 170.353 236.176 c169.732 236.176 169.112 236.297 168.529 236.529 c167.985 236.763 167.466 237.122 167 237.588 c166.573 238.015 166.233 238.535 166 239.118 c165.767 239.662 165.647 240.261 165.647 240.882 c165.647 240.882  L[] 0 d 1 j 1 J0.118 w 0 G S165.647 206.353  m165.647 206.935 165.767 207.535 166 208.118 c166.233 208.7 166.573 209.22 167 209.647 c167.466 210.074 167.985 210.414 168.529 210.647 c169.112 210.88 169.732 211 170.353 211 c170.974 211 171.574 210.88 172.118 210.647 c172.7 210.414 173.22 210.074 173.647 209.647 c174.074 209.22 174.414 208.7 174.647 208.118 c174.919 207.535 175.059 206.935 175.059 206.353 c175.059 206.353  L175.059 205.732 174.919 205.112 174.647 204.529 c174.414 203.986 174.074 203.466 173.647 203 c173.22 202.573 172.7 202.233 172.118 202 c171.574 201.767 170.974 201.647 170.353 201.647 c169.732 201.647 169.112 201.767 168.529 202 c167.985 202.233 167.466 202.573 167 203 c166.573 203.466 166.233 203.985 166 204.529 c165.767 205.112 165.647 205.732 165.647 206.353 c165.647 206.353  L[] 0 d 1 j 1 J0.118 w 0 G S174.294 221.294  m174.294 221.915 174.414 222.515 174.647 223.059 c174.88 223.641 175.22 224.161 175.647 224.588 c176.113 225.054 176.633 225.414 177.176 225.647 c177.759 225.88 178.378 226 179 226 c179.622 226 180.221 225.88 180.765 225.647 c181.347 225.414 181.867 225.054 182.294 224.588 c182.721 224.161 183.061 223.641 183.294 223.059 c183.527 222.515 183.647 221.916 183.647 221.294 c183.647 221.294  L183.647 220.672 183.527 220.053 183.294 219.471 c183.061 218.927 182.721 218.427 182.294 218 c181.867 217.534 181.347 217.174 180.765 216.941 c180.221 216.708 179.622 216.588 179 216.588 c178.379 216.588 177.759 216.708 177.176 216.941 c176.633 217.174 176.113 217.534 175.647 218 c175.22 218.427 174.88 218.927 174.647 219.471 c174.414 220.053 174.294 220.672 174.294 221.294 c174.294 221.294  L[] 0 d 1 j 1 J0.118 w 0 G S165.647 171.765  m165.647 172.386 165.767 173.006 166 173.588 c166.233 174.132 166.573 174.652 167 175.118 c167.466 175.545 167.986 175.885 168.529 176.118 c169.112 176.351 169.731 176.471 170.353 176.471 c170.974 176.471 171.574 176.351 172.118 176.118 c172.7 175.885 173.22 175.545 173.647 175.118 c174.074 174.651 174.414 174.132 174.647 173.588 c174.919 173.006 175.059 172.386 175.059 171.765 c175.059 171.765  L175.059 171.144 174.919 170.543 174.647 170 c174.414 169.418 174.074 168.898 173.647 168.471 c173.22 168.043 172.7 167.704 172.118 167.471 c171.574 167.238 170.974 167.118 170.353 167.118 c169.732 167.118 169.112 167.238 168.529 167.471 c167.986 167.703 167.466 168.044 167 168.471 c166.573 168.898 166.233 169.418 166 170 c165.767 170.543 165.647 171.144 165.647 171.765 c165.647 171.765  L[] 0 d 1 j 1 J0.118 w 0 G S174.294 191.353  m174.294 191.974 174.414 192.594 174.647 193.176 c174.88 193.72 175.22 194.24 175.647 194.706 c176.113 195.133 176.633 195.473 177.176 195.706 c177.759 195.939 178.379 196.059 179 196.059 c179.621 196.059 180.221 195.939 180.765 195.706 c181.347 195.473 181.867 195.133 182.294 194.706 c182.721 194.24 183.061 193.72 183.294 193.176 c183.527 192.594 183.647 191.974 183.647 191.353 c183.647 191.353  L183.647 190.732 183.527 190.132 183.294 189.588 c183.061 189.006 182.721 188.486 182.294 188.059 c181.867 187.632 181.347 187.292 180.765 187.059 c180.221 186.826 179.621 186.706 179 186.706 c178.379 186.706 177.759 186.826 177.176 187.059 c176.633 187.292 176.113 187.631 175.647 188.059 c175.22 188.486 174.88 189.006 174.647 189.588 c174.414 190.132 174.294 190.732 174.294 191.353 c174.294 191.353  L[] 0 d 1 j 1 J0.118 w 0 G S96.941 98.176  m96.941 101.127 97.521 104.047 98.647 106.765 c99.773 109.482 101.433 111.963 103.529 114.059 c105.627 116.157 108.104 117.814 110.824 118.941 c113.541 120.067 116.462 120.647 119.412 120.647 c122.362 120.647 125.303 120.067 128.059 118.941 c130.778 117.814 133.255 116.157 135.353 114.059 c137.451 111.961 139.109 109.484 140.235 106.765 c141.361 104.047 141.941 101.127 141.941 98.176 c141.941 98.176  L141.941 95.226 141.361 92.285 140.235 89.529 c139.109 86.81 137.451 84.333 135.353 82.235 c133.257 80.178 130.776 78.517 128.059 77.353 c125.303 76.227 122.362 75.647 119.412 75.647 c116.459 75.647 113.543 76.226 110.824 77.353 c108.104 78.519 105.627 80.176 103.529 82.235 c101.431 84.333 99.774 86.81 98.647 89.529 c97.521 92.285 96.941 95.226 96.941 98.176 c96.941 98.176  L[] 0 d 1 j 1 J0.118 w 0 G S182.941 236.235  m182.941 236.856 183.061 237.477 183.294 238.059 c183.527 238.603 183.867 239.122 184.294 239.588 c184.721 240.016 185.241 240.355 185.824 240.588 c186.406 240.821 187.025 240.941 187.647 240.941 c188.23 240.941 188.829 240.821 189.412 240.588 c189.994 240.355 190.514 240.015 190.941 239.588 c191.369 239.122 191.708 238.603 191.941 238.059 c192.174 237.477 192.294 236.856 192.294 236.235 c192.294 236.235  L192.294 235.614 192.174 235.015 191.941 234.471 c191.708 233.888 191.368 233.368 190.941 232.941 c190.514 232.514 189.994 232.174 189.412 231.941 c188.829 231.708 188.229 231.588 187.647 231.588 c187.026 231.588 186.406 231.708 185.824 231.941 c185.241 232.174 184.721 232.514 184.294 232.941 c183.867 233.368 183.527 233.888 183.294 234.471 c183.061 235.015 182.941 235.614 182.941 236.235 c182.941 236.235  L[] 0 d 1 j 1 J0.118 w 0 G S182.882 206.353  m182.882 206.974 183.002 207.594 183.235 208.176 c183.468 208.72 183.808 209.22 184.235 209.647 c184.663 210.113 185.182 210.473 185.765 210.706 c186.347 210.939 186.967 211.059 187.588 211.059 c188.171 211.059 188.771 210.939 189.353 210.706 c189.936 210.473 190.455 210.113 190.882 209.647 c191.31 209.22 191.649 208.72 191.882 208.176 c192.115 207.594 192.235 206.974 192.235 206.353 c192.235 206.353  L192.235 205.731 192.115 205.132 191.882 204.588 c191.649 204.006 191.309 203.486 190.882 203.059 c190.455 202.593 189.935 202.233 189.353 202 c188.771 201.767 188.171 201.647 187.588 201.647 c186.967 201.647 186.347 201.767 185.765 202 c185.182 202.233 184.663 202.593 184.235 203.059 c183.808 203.486 183.468 204.006 183.235 204.588 c183.002 205.132 182.882 205.732 182.882 206.353 c182.882 206.353  L[] 0 d 1 j 1 J0.118 w 0 G S182.941 176.412  m182.941 177.033 183.061 177.633 183.294 178.176 c183.527 178.759 183.867 179.279 184.294 179.706 c184.721 180.172 185.241 180.532 185.824 180.765 c186.406 180.998 187.026 181.118 187.647 181.118 c188.229 181.118 188.829 180.998 189.412 180.765 c189.994 180.532 190.514 180.172 190.941 179.706 c191.369 179.279 191.708 178.759 191.941 178.176 c192.174 177.633 192.294 177.033 192.294 176.412 c192.294 176.412  L192.294 175.791 192.174 175.171 191.941 174.588 c191.708 174.045 191.368 173.545 190.941 173.118 c190.514 172.652 189.994 172.292 189.412 172.059 c188.829 171.826 188.229 171.706 187.647 171.706 c187.026 171.706 186.406 171.826 185.824 172.059 c185.241 172.292 184.721 172.651 184.294 173.118 c183.867 173.545 183.527 174.045 183.294 174.588 c183.061 175.171 182.941 175.79 182.941 176.412 c182.941 176.412  L[] 0 d 1 j 1 J0.118 w 0 G S195.588 223.588  m195.588 224.209 195.708 224.829 195.941 225.412 c196.174 225.956 196.514 226.475 196.941 226.941 c197.369 227.369 197.888 227.708 198.471 227.941 c199.053 228.174 199.673 228.294 200.294 228.294 c200.876 228.294 201.477 228.174 202.059 227.941 c202.641 227.708 203.161 227.368 203.588 226.941 c204.016 226.475 204.355 225.956 204.588 225.412 c204.821 224.829 204.941 224.209 204.941 223.588 c204.941 223.588  L204.941 222.967 204.821 222.367 204.588 221.824 c204.355 221.241 204.015 220.721 203.588 220.294 c203.161 219.867 202.641 219.527 202.059 219.294 c201.477 219.061 200.876 218.941 200.294 218.941 c199.673 218.941 199.053 219.061 198.471 219.294 c197.888 219.527 197.368 219.867 196.941 220.294 c196.514 220.721 196.174 221.241 195.941 221.824 c195.708 222.367 195.588 222.967 195.588 223.588 c195.588 223.588  L[] 0 d 1 j 1 J0.118 w 0 G S195.588 189.059  m195.588 189.68 195.708 190.28 195.941 190.824 c196.174 191.406 196.514 191.926 196.941 192.353 c197.369 192.819 197.888 193.179 198.471 193.412 c199.053 193.645 199.673 193.765 200.294 193.765 c200.876 193.765 201.477 193.645 202.059 193.412 c202.641 193.179 203.161 192.819 203.588 192.353 c204.016 191.926 204.355 191.406 204.588 190.824 c204.821 190.28 204.941 189.68 204.941 189.059 c204.941 189.059  L204.941 188.437 204.821 187.818 204.588 187.235 c204.355 186.692 204.015 186.192 203.588 185.765 c203.161 185.299 202.641 184.939 202.059 184.706 c201.477 184.473 200.876 184.353 200.294 184.353 c199.673 184.353 199.053 184.473 198.471 184.706 c197.888 184.939 197.368 185.299 196.941 185.765 c196.514 186.192 196.174 186.692 195.941 187.235 c195.708 187.818 195.588 188.438 195.588 189.059 c195.588 189.059  L[] 0 d 1 j 1 J0.118 w 0 G S200.235 206.353  m200.235 206.935 200.355 207.535 200.588 208.118 c200.821 208.7 201.161 209.22 201.588 209.647 c202.016 210.074 202.535 210.414 203.118 210.647 c203.661 210.88 204.261 211 204.882 211 c205.503 211 206.124 210.88 206.706 210.647 c207.25 210.414 207.769 210.074 208.235 209.647 c208.663 209.22 209.002 208.7 209.235 208.118 c209.468 207.535 209.588 206.935 209.588 206.353 c209.588 206.353  L209.588 205.731 209.468 205.112 209.235 204.529 c209.002 203.986 208.662 203.466 208.235 203 c207.769 202.573 207.249 202.233 206.706 202 c206.124 201.767 205.503 201.647 204.882 201.647 c204.261 201.647 203.661 201.767 203.118 202 c202.535 202.233 202.016 202.573 201.588 203 c201.161 203.466 200.821 203.986 200.588 204.529 c200.355 205.112 200.235 205.732 200.235 206.353 c200.235 206.353  L[] 0 d 1 j 1 J0.118 w 0 G S42 48.471  m42 49.325 42.16 50.165 42.471 50.941 c42.82 51.718 43.3 52.437 43.882 53.059 c44.504 53.642 45.223 54.121 46 54.471 c46.776 54.781 47.617 54.941 48.471 54.941 c49.325 54.941 50.165 54.781 50.941 54.471 c51.757 54.121 52.476 53.642 53.059 53.059 c53.68 52.437 54.16 51.718 54.471 50.941 c54.781 50.165 54.941 49.325 54.941 48.471 c54.941 48.471  L54.941 47.617 54.781 46.776 54.471 46 c54.16 45.223 53.68 44.504 53.059 43.882 c52.476 43.3 51.757 42.82 50.941 42.471 c50.165 42.16 49.325 42 48.471 42 c47.617 42 46.776 42.16 46 42.471 c45.223 42.82 44.504 43.3 43.882 43.882 c43.3 44.504 42.82 45.223 42.471 46 c42.16 46.776 42 47.617 42 48.471 c42 48.471  L[] 0 d 1 j 1 J0.118 w 0 G S217.118 257.235  m217.118 257.779 217.218 258.319 217.412 258.824 c217.645 259.328 217.965 259.788 218.353 260.176 c218.703 260.565 219.142 260.865 219.647 261.059 c220.152 261.292 220.692 261.412 221.235 261.412 c221.779 261.412 222.318 261.292 222.824 261.059 c223.329 260.865 223.788 260.565 224.176 260.176 c224.565 259.788 224.865 259.328 225.059 258.824 c225.292 258.318 225.412 257.779 225.412 257.235 c225.412 257.235  L225.412 256.692 225.292 256.152 225.059 255.647 c224.865 255.142 224.565 254.683 224.176 254.294 c223.788 253.906 223.328 253.606 222.824 253.412 c222.318 253.218 221.779 253.118 221.235 253.118 c220.692 253.118 220.152 253.218 219.647 253.412 c219.142 253.606 218.702 253.906 218.353 254.294 c217.964 254.683 217.645 255.142 217.412 255.647 c217.218 256.152 217.118 256.691 217.118 257.235 c217.118 257.235  L[] 0 d 1 j 1 J0.118 w 0 G S217.118 155.412  m217.118 155.955 217.218 156.495 217.412 157 c217.645 157.505 217.964 157.964 218.353 158.353 c218.703 158.741 219.142 159.041 219.647 159.235 c220.152 159.468 220.691 159.588 221.235 159.588 c221.779 159.588 222.318 159.468 222.824 159.235 c223.329 159.041 223.788 158.741 224.176 158.353 c224.565 157.965 224.865 157.505 225.059 157 c225.292 156.495 225.412 155.956 225.412 155.412 c225.412 155.412  L225.412 154.868 225.292 154.328 225.059 153.824 c224.865 153.318 224.565 152.859 224.176 152.471 c223.788 152.082 223.328 151.782 222.824 151.588 c222.319 151.394 221.779 151.294 221.235 151.294 c220.691 151.294 220.152 151.394 219.647 151.588 c219.142 151.782 218.702 152.082 218.353 152.471 c217.965 152.859 217.645 153.319 217.412 153.824 c217.218 154.329 217.118 154.868 217.118 155.412 c217.118 155.412  L[] 0 d 1 j 1 J0.118 w 0 G S198.765 98.176  m198.765 101.127 199.345 104.047 200.471 106.765 c201.596 109.482 203.257 111.963 205.353 114.059 c207.451 116.157 209.927 117.814 212.647 118.941 c215.367 120.068 218.283 120.647 221.235 120.647 c224.185 120.647 227.126 120.067 229.882 118.941 c232.6 117.815 235.08 116.155 237.176 114.059 c239.273 111.963 240.933 109.482 242.059 106.765 c243.185 104.047 243.765 101.127 243.765 98.176 c243.765 98.176  L243.765 95.226 243.185 92.285 242.059 89.529 c240.933 86.812 239.273 84.331 237.176 82.235 c235.08 80.178 232.6 78.517 229.882 77.353 c227.126 76.227 224.185 75.647 221.235 75.647 c218.285 75.647 215.364 76.227 212.647 77.353 c209.93 78.517 207.449 80.178 205.353 82.235 c203.257 84.331 201.596 86.812 200.471 89.529 c199.345 92.285 198.765 95.226 198.765 98.176 c198.765 98.176  L[] 0 d 1 j 1 J0.118 w 0 G S285.706 292.176  m285.706 293.03 285.886 293.871 286.235 294.647 c286.546 295.463 287.025 296.182 287.647 296.765 c288.229 297.386 288.93 297.866 289.706 298.176 c290.521 298.487 291.361 298.647 292.176 298.647 c293.031 298.647 293.89 298.487 294.706 298.176 c295.482 297.866 296.182 297.386 296.765 296.765 c297.386 296.182 297.866 295.462 298.176 294.647 c298.526 293.871 298.706 293.03 298.706 292.176 c298.706 292.176  L298.706 291.322 298.526 290.482 298.176 289.706 c297.866 288.93 297.386 288.209 296.765 287.588 c296.182 287.006 295.482 286.526 294.706 286.176 c293.891 285.866 293.03 285.706 292.176 285.706 c291.361 285.706 290.522 285.866 289.706 286.176 c288.93 286.526 288.229 287.006 287.647 287.588 c287.026 288.209 286.546 288.93 286.235 289.706 c285.886 290.482 285.706 291.322 285.706 292.176 c285.706 292.176  L[] 0 d 1 j 1 J0.118 w 0 G S%%TrailerAdobe_Illustrator88 /terminate get execAdobe_pattern /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF